name: Deploy to GitHub Pages

on:
  push:
    branches: 'guc'

jobs:
  build_site:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          # could also be 'recursive'
          submodules: true

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm install

      - name: Fetch binaries
        run: |
          curl "https://github.com/pablode/USD/releases/download/v23.08-ci-release/USD23.08_Linux_x64_Python3.8.tar.gz" -L -v -o USD.tar.gz
          curl "https://github.com/pablode/guc/releases/download/v0.3/guc_USD23.08_Linux_x64_Python3.8.tar.gz" -L -v -o GUC.tar.gz

      - name: Install binaries
        run: |
          mkdir -p USD_INSTALL && tar -xvf USD.tar.gz -C $PWD/USD_INSTALL
          mkdir -p GUC_INSTALL && tar -xvf GUC.tar.gz -C $PWD/GUC_INSTALL
          echo "LD_LIBRARY_PATH=$PWD/USD_INSTALL/lib" >> $GITHUB_ENV
          echo "$PWD/GUC_INSTALL/bin" >> $GITHUB_PATH

      - name: Print guc help
        run: guc || [ $? -eq 1 ]

      - name: build
        env:
          # '/asset-explorer' - not used since custom domain
          BASE_PATH: ''
        run: |
          npm run build
          touch build/.nojekyll

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          # this should match the `pages` option in your adapter-static options
          path: 'build/'

  deploy:
    needs: build_site
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v1